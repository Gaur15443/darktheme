apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */

// ENV CONFIG
project.ext.defaultEnvFile ="../path/to/.env.file"
project.ext.envConfigFiles = [
   productiondebug: ".env.prod",
   productionrelease: ".env.prod",
   developmentrelease: ".env.dev",
   developmentdebug: ".env.dev",
   stagingrelease: ".env.uat",
   stagingdebug: ".env.uat"
]
// ---

apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    // root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]
    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = true
def enableSeparateBuildPerCPUArchitecture = true
/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = io.github.react-native-community:jsc-android-intl:2026004.+`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

apply from: new File(["node", "--print", "require.resolve('@sentry/react-native/package.json')"].execute().text.trim(), "../sentry.gradle")
android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

     flavorDimensions "default"
    productFlavors {
        production {
            minSdkVersion rootProject.ext.minSdkVersion
            applicationId "com.imeuswe.app"
            targetSdkVersion rootProject.ext.targetSdkVersion
            resValue "string", "build_config_package", "com.imeuswe.app"
        }
        staging {
            minSdkVersion rootProject.ext.minSdkVersion
            applicationId "com.imeuswe.app"
            targetSdkVersion rootProject.ext.targetSdkVersion
            resValue "string", "build_config_package", "com.imeuswe.app"
        }
        development {
            minSdkVersion rootProject.ext.minSdkVersion
            applicationId "com.imeuswe.app"
            targetSdkVersion rootProject.ext.targetSdkVersion
            resValue "string", "build_config_package", "com.imeuswe.app"
        }
    }

    namespace "com.imeuswe.app"
    defaultConfig {
        applicationId "com.imeuswe.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 108
        versionName "4.8"
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        debug {
            storeFile file('imeuswe-prod.jks')
            storePassword 'imeuswe.dev@2022'
            keyAlias 'imeuswe-prod'
            keyPassword 'imeuswe.dev@2022'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
             matchingFallbacks = ['debug', 'release']
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            debuggable false
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    packagingOptions {
      exclude 'lib/armeabi-v7a/libagora_ai_denoise_extension.so'
      exclude 'lib/armeabi-v7a/libagora_spatial_audio_extension.so'
      exclude 'lib/armeabi-v7a/libagora_ai_echo_cancellation_extension.so'
      exclude 'lib/armeabi-v7a/libagora_audio_beauty_extension.so'
      exclude 'lib/armeabi-v7a/libagora_clear_vision_extension.so'
      exclude 'lib/armeabi-v7a/libagora_content_inspect_extensio.so'
      exclude 'lib/armeabi-v7a/libagora_pvc_extension.so'
      exclude 'lib/armeabi-v7a/libagora_spatial_audio_extension.so'
      exclude 'lib/armeabi-v7a/libagora_segmentation_extension.so'
      exclude 'lib/armeabi-v7a/libagora_drm_loader_extension.so'
      exclude 'lib/armeabi-v7a/libagora_udrm3_extension.so'
      exclude 'lib/armeabi-v7a/libagora_face_detection_extension.so'
      exclude 'lib/armeabi-v7a/libagora_face_capture_extension.so'
      exclude 'lib/armeabi-v7a/libagora_super_resolution_extension.so'
      exclude 'lib/armeabi-v7a/libagora_screen_capture_extension.so'
      exclude 'lib/armeabi-v7a/libagora_video_quality_analyzer_extension.so'
      exclude 'lib/armeabi-v7a/libagora_video_encoder_extension.so'
      exclude 'lib/armeabi-v7a/video_enc.so'
      exclude 'lib/armeabi-v7a/libagora_video_decoder_extension.so'
      exclude 'lib/armeabi-v7a/video_dec.so'
      exclude 'lib/armeabi-v7a/libagora_video_av1_encoder_extension.so'
      exclude 'lib/armeabi-v7a/libagora_video_av1_decoder_extension.so'
      exclude 'lib/armeabi-v7a/AgoraScreenShareExtension.aar.so'
      exclude 'lib/armeabi-v7a/libagora_lip_sync_extension.so'
      exclude "lib/armeabi-v7a/libagora_ai_echo_cancellation_ll_extension.so"
      exclude "lib/armeabi-v7a/libagora_ai_noise_suppression_extension.so"
      exclude "lib/armeabi-v7a/libagora_ai_noise_suppression_ll_extension.so"

      exclude 'lib/arm64-v8a/libagora_ai_denoise_extension.so'
      exclude 'lib/arm64-v8a/libagora_spatial_audio_extension.so'
      exclude 'lib/arm64-v8a/libagora_ai_echo_cancellation_extension.so'
      exclude 'lib/arm64-v8a/libagora_audio_beauty_extension.so'
      exclude 'lib/arm64-v8a/libagora_clear_vision_extension.so'
      exclude 'lib/arm64-v8a/libagora_content_inspect_extensio.so'
      exclude 'lib/arm64-v8a/libagora_pvc_extension.so'
      exclude 'lib/arm64-v8a/libagora_spatial_audio_extension.so'
      exclude 'lib/arm64-v8a/libagora_segmentation_extension.so'
      exclude 'lib/arm64-v8a/libagora_drm_loader_extension.so'
      exclude 'lib/arm64-v8a/libagora_udrm3_extension.so'
      exclude 'lib/arm64-v8a/libagora_face_detection_extension.so'
      exclude 'lib/arm64-v8a/libagora_face_capture_extension.so'
      exclude 'lib/arm64-v8a/libagora_super_resolution_extension.so'
      exclude 'lib/arm64-v8a/libagora_screen_capture_extension.so'
      exclude 'lib/arm64-v8a/libagora_video_quality_analyzer_extension.so'
      exclude 'lib/arm64-v8a/libagora_video_encoder_extension.so'
      exclude 'lib/arm64-v8a/video_enc.so'
      exclude 'lib/arm64-v8a/libagora_video_decoder_extension.so'
      exclude 'lib/arm64-v8a/video_dec.so'
      exclude 'lib/arm64-v8a/libagora_video_av1_encoder_extension.so'
      exclude 'lib/arm64-v8a/libagora_video_av1_decoder_extension.so'
      exclude 'lib/arm64/libagora_screen_capture_extension.so'
      exclude 'lib/arm64/libagora_lip_sync_extension.so'
      exclude "lib/arm64/libagora_ai_echo_cancellation_ll_extension.so"
      exclude "lib/arm64/libagora_ai_noise_suppression_extension.so"
      exclude "lib/arm64/libagora_ai_noise_suppression_ll_extension.so"

      exclude 'lib/x86_64/libagora_ai_noise_suppression_extension.so'
      exclude 'lib/x86_64/libagora_ai_echo_cancellation_extension.so'
      exclude 'lib/x86_64/libagora_audio_beauty_extension.so'
      exclude 'lib/x86_64/libagora_clear_vision_extension.so'
      exclude 'lib/x86_64/libagora_content_inspect_extensio.so'
      exclude 'lib/x86_64/libagora_spatial_audio_extension.so'
      exclude 'lib/x86_64/libagora_drm_loader_extension.so'
      exclude 'lib/x86_64/libagora_udrm3_extension.so'
      exclude 'lib/x86_64/libagora_face_detection_extension.so'
      exclude 'lib/x86_64/libagora_video_quality_analyzer_extension.so'
      exclude 'lib/x86_64/libagora_video_encoder_extension.so'
      exclude 'lib/x86_64/video_enc.so'
      exclude 'lib/x86_64/libagora_video_decoder_extension.so'
      exclude 'lib/x86_64/video_dec.so'
      exclude 'lib/x86_64/libagora_video_av1_encoder_extension.so'
      exclude 'lib/x86_64/libagora_video_av1_decoder_extension.so'
      exclude 'lib/x86_64/libagora_lip_sync_extension.so'
      exclude "lib/x86_64/libagora_ai_echo_cancellation_ll_extension.so"
      exclude "lib/x86_64/libagora_ai_noise_suppression_extension.so"
      exclude "lib/x86_64/libagora_ai_noise_suppression_ll_extension.so"

      exclude 'lib/x86/libagora_ai_noise_suppression_extension.so'
      exclude 'lib/x86/libagora_ai_echo_cancellation_extension.so'
      exclude 'lib/x86/libagora_audio_beauty_extension.so'
      exclude 'lib/x86/libagora_clear_vision_extension.so'
      exclude 'lib/x86/libagora_content_inspect_extensio.so'
      exclude 'lib/x86/libagora_spatial_audio_extension.so'
      exclude 'lib/x86/libagora_drm_loader_extension.so'
      exclude 'lib/x86/libagora_udrm3_extension.so'
      exclude 'lib/x86/libagora_face_detection_extension.so'
      exclude 'lib/x86/libagora_video_quality_analyzer_extension.so'
      exclude 'lib/x86/libagora_video_encoder_extension.so'
      exclude 'lib/x86/video_enc.so'
      exclude 'lib/x86/libagora_video_decoder_extension.so'
      exclude 'lib/x86/video_dec.so'
      exclude 'lib/x86/libagora_video_av1_encoder_extension.so'
      exclude 'lib/x86/libagora_video_av1_decoder_extension.so'
      exclude 'lib/x86/libagora_lip_sync_extension.so'
      exclude "lib/x86/libagora_ai_echo_cancellation_ll_extension.so"
      exclude "lib/x86/libagora_ai_noise_suppression_extension.so"
      exclude "lib/x86/libagora_ai_noise_suppression_ll_extension.so"
    
    }
}

repositories {
     mavenCentral()
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation project(':payu-non-seam-less-react')
    implementation("com.facebook.react:react-android")
    implementation project(':react-native-vector-icons')
    // implementation 'com.facebook.fresco:fresco:2.0.0'
    // implementation 'com.facebook.fresco:animated-gif:2.0.0'
    implementation 'com.facebook.fresco:animated-gif:3.2.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    // implementation("com.facebook.react:flipper-integration")
    //facebook sdk dependences
    implementation 'com.facebook.android:facebook-android-sdk:latest.release'
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
    implementation 'com.clevertap.android:clevertap-android-sdk:5.0.0'
    implementation 'com.google.firebase:firebase-messaging:23.0.6'
    implementation 'androidx.core:core:1.4.0'
    implementation 'androidx.fragment:fragment:1.3.6'
    //For CleverTap Android SDK v3.6.4 and above add the following -
    implementation 'com.android.installreferrer:installreferrer:2.2'

    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation 'com.razorpay:checkout:1.6.26'

    
}

apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
